unitdigitsort.<init>{
	entry ->   
	LS:  [SubClass: aload_0]
	MC:  calls java.lang.Object.<init>
	CF:  -> private int[] no = new int[15]
	LS: private int[] no = new int[15] [SubClass: aload_0]
	CF: private int[] no = new int[15] -> n = an
	LS: n = an [SubClass: aload_0]
	LS: n = an [SubClass: iload_1]
	CF: n = an -> no=ano
	LS: no=ano [SubClass: aload_0]
	LS: no=ano [SubClass: aload_2]
	CF: no=ano -> 
	CF:  -> exit [Return Type: void]
}
unitdigitsort.sort{
	entry ->   
	LS: for(int i = 0  i < n  i++) [SubClass: istore_2]
	LS: for(int i = 0  i < n  i++) [SubClass: iload_2]
	LS: for(int i = 0  i < n  i++) [SubClass: aload_0]
	CF: for(int i = 0  i < n  i++) -> for(int k = 0  k < n  k++) [label = "if_icmpge"]
	CF: for(int i = 0  i < n  i++) -> for(int j = i  j < n  j++) [label = "!if_icmpge"]
	LS: for(int j = i  j < n  j++) [SubClass: iload_2]
	LS: for(int j = i  j < n  j++) [SubClass: istore_3]
	LS: for(int j = i  j < n  j++) [SubClass: iload_3]
	LS: for(int j = i  j < n  j++) [SubClass: aload_0]
	CF: for(int j = i  j < n  j++) -> for(int i = 0  i < n  i++) [label = "if_icmpge"]
	CF: for(int j = i  j < n  j++) -> if((no[i]%10)>(no[j]%10)) [label = "!if_icmpge"]
	LS: if((no[i]%10)>(no[j]%10)) [SubClass: aload_0]
	LS: if((no[i]%10)>(no[j]%10)) [SubClass: iload_2]
	AI: if((no[i]%10)>(no[j]%10)) [SubClass: irem	Type: int]
	LS: if((no[i]%10)>(no[j]%10)) [SubClass: aload_0]
	LS: if((no[i]%10)>(no[j]%10)) [SubClass: iload_3]
	AI: if((no[i]%10)>(no[j]%10)) [SubClass: irem	Type: int]
	CF: if((no[i]%10)>(no[j]%10)) -> for(int j = i  j < n  j++) [label = "if_icmple"]
	CF: if((no[i]%10)>(no[j]%10)) -> temp = no[j] [label = "!if_icmple"]
	LS: temp = no[j] [SubClass: aload_0]
	LS: temp = no[j] [SubClass: iload_3]
	LS: temp = no[j] [SubClass: istore_1]
	CF: temp = no[j] -> no[j] = no[i]
	LS: no[j] = no[i] [SubClass: aload_0]
	LS: no[j] = no[i] [SubClass: iload_3]
	LS: no[j] = no[i] [SubClass: aload_0]
	LS: no[j] = no[i] [SubClass: iload_2]
	CF: no[j] = no[i] -> no[i] = temp
	LS: no[i] = temp [SubClass: aload_0]
	LS: no[i] = temp [SubClass: iload_2]
	LS: no[i] = temp [SubClass: iload_1]
	CF: no[i] = temp -> for(int j = i  j < n  j++)
	LS: for(int j = i  j < n  j++) [SubClass: iinc]
	CF: for(int j = i  j < n  j++) -> for(int j = i  j < n  j++) [label = "goto"]
	LS: for(int i = 0  i < n  i++) [SubClass: iinc]
	CF: for(int i = 0  i < n  i++) -> for(int i = 0  i < n  i++) [label = "goto"]
	LS: for(int k = 0  k < n  k++) [SubClass: istore_2]
	LS: for(int k = 0  k < n  k++) [SubClass: iload_2]
	LS: for(int k = 0  k < n  k++) [SubClass: aload_0]
	CF: for(int k = 0  k < n  k++) ->  [label = "if_icmpge"]
	CF: for(int k = 0  k < n  k++) -> System.out.println(no[k]) [label = "!if_icmpge"]
	LS: System.out.println(no[k]) [SubClass: aload_0]
	LS: System.out.println(no[k]) [SubClass: iload_2]
	MC: System.out.println(no[k]) calls java.io.PrintStream.println
	CF: System.out.println(no[k]) -> for(int k = 0  k < n  k++)
	LS: for(int k = 0  k < n  k++) [SubClass: iinc]
	CF: for(int k = 0  k < n  k++) -> for(int k = 0  k < n  k++) [label = "goto"]
	CF:  -> exit [Return Type: void]
}
