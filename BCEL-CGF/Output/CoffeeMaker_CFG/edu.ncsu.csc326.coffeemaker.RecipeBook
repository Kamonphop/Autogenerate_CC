edu.ncsu.csc326.coffeemaker.RecipeBook.<init>{
	entry ->   
	MC: public RecipeBook() { -> java.lang.Object.<init>;
	CF: public RecipeBook() { -> private final int NUM_RECIPES = 3;;
	CF: private final int NUM_RECIPES = 3; -> recipeArray = new Recipe[NUM_RECIPES];;
	CF: recipeArray = new Recipe[NUM_RECIPES]; -> };
	CF: } -> exit;
}
edu.ncsu.csc326.coffeemaker.RecipeBook.getRecipes{
	entry ->   
	CF: return recipeArray; -> exit;
}
edu.ncsu.csc326.coffeemaker.RecipeBook.addRecipe{
	entry ->   
	CF: boolean exists = false; -> for (int i = 0; i < recipeArray.length; i++ ) {;
	CF: for (int i = 0; i < recipeArray.length; i++ ) { -> for (int i = 0; i < recipeArray.length; i++ ) { [label = "goto"];
	MC: if (r.equals(recipeArray[i])) { -> edu.ncsu.csc326.coffeemaker.Recipe.equals;
	CF: if (r.equals(recipeArray[i])) { -> for (int i = 0; i < recipeArray.length; i++ ) { [label = "ifeq"];
	CF: if (r.equals(recipeArray[i])) { -> exists = true; [label = "!ifeq"];
	CF: exists = true; -> for (int i = 0; i < recipeArray.length; i++ ) {;
	CF: for (int i = 0; i < recipeArray.length; i++ ) { -> if (r.equals(recipeArray[i])) { [label = "if_icmplt"];
	CF: for (int i = 0; i < recipeArray.length; i++ ) { -> boolean added = false; [label = "!if_icmplt"];
	CF: boolean added = false; -> if (!exists) {;
	CF: if (!exists) { -> return added; [label = "ifne"];
	CF: if (!exists) { -> for (int i = 0; i < recipeArray.length && !added; i++) { [label = "!ifne"];
	CF: for (int i = 0; i < recipeArray.length && !added; i++) { -> for (int i = 0; i < recipeArray.length && !added; i++) { [label = "goto"];
	CF: if (recipeArray[i] == null) { -> for (int i = 0; i < recipeArray.length && !added; i++) { [label = "ifnonnull"];
	CF: if (recipeArray[i] == null) { -> recipeArray[i] = r; [label = "!ifnonnull"];
	CF: recipeArray[i] = r; -> added = true;;
	CF: added = true; -> for (int i = 0; i < recipeArray.length && !added; i++) {;
	CF: for (int i = 0; i < recipeArray.length && !added; i++) { -> return added; [label = "if_icmpge"];
	CF: for (int i = 0; i < recipeArray.length && !added; i++) { -> for (int i = 0; i < recipeArray.length && !added; i++) { [label = "!if_icmpge"];
	CF: for (int i = 0; i < recipeArray.length && !added; i++) { -> if (recipeArray[i] == null) { [label = "ifeq"];
	CF: for (int i = 0; i < recipeArray.length && !added; i++) { -> return added; [label = "!ifeq"];
	CF: return added; -> exit;
}
edu.ncsu.csc326.coffeemaker.RecipeBook.deleteRecipe{
	entry ->   
	CF: if (recipeArray[recipeToDelete] != null) { -> return null; [label = "ifnull"];
	CF: if (recipeArray[recipeToDelete] != null) { -> String recipeName = recipeArray[recipeToDelete].getName(); [label = "!ifnull"];
	MC: String recipeName = recipeArray[recipeToDelete].getName(); -> edu.ncsu.csc326.coffeemaker.Recipe.getName;
	CF: String recipeName = recipeArray[recipeToDelete].getName(); -> recipeArray[recipeToDelete] = null;;
	CF: recipeArray[recipeToDelete] = null; -> return recipeName;;
	CF: return recipeName; -> exit;
	CF: return null; -> exit;
}
edu.ncsu.csc326.coffeemaker.RecipeBook.editRecipe{
	entry ->   
	CF: if (recipeArray[recipeToEdit] != null) { -> return null; [label = "ifnull"];
	CF: if (recipeArray[recipeToEdit] != null) { -> String recipeName = recipeArray[recipeToEdit].getName(); [label = "!ifnull"];
	MC: String recipeName = recipeArray[recipeToEdit].getName(); -> edu.ncsu.csc326.coffeemaker.Recipe.getName;
	CF: String recipeName = recipeArray[recipeToEdit].getName(); -> newRecipe.setName(recipeName);;
	MC: newRecipe.setName(recipeName); -> edu.ncsu.csc326.coffeemaker.Recipe.setName;
	CF: newRecipe.setName(recipeName); -> recipeArray[recipeToEdit] = newRecipe;;
	CF: recipeArray[recipeToEdit] = newRecipe; -> return recipeName;;
	CF: return recipeName; -> exit;
	CF: return null; -> exit;
}
